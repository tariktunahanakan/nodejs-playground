image:
  repository: 975050207458.dkr.ecr.eu-north-1.amazonaws.com/node/producer
  pullPolicy: IfNotPresent
  tag: "1.7"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

replicaCount: 1

service:
  type: ClusterIP
  port: 80
  container:
    port: 9092

env:
  KAFKA_BROKER: kafka-broker-headless.kafka.svc.cluster.local:9092
  KAFKA_TOPIC: events
  KAFKA_USERNAME: user1
  KAFKA_PASSWORD: yRpkS8dtpr
  METRICS_PORT: 9092
  PRODUCER_CLIENT_ID: producer-service

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: internal-apps
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/subnets: "subnet-0b8838623d69f5a21, subnet-09709a31cb3deaf9a"
    alb.ingress.kubernetes.io/healthcheck-path: "/health"
  ingressClassName: alb  
  hosts:
    - host: producer-app.local
      paths:
        - path: /
          pathType: Prefix

affinity: {}
serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}

autoscaling:
  enabled: false
  minReplicas: 0
  maxReplicas: 100
  targetCPUUtilizationPercentage: 50